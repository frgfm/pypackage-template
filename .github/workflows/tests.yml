name: tests

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  pytest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: [3.8]
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ matrix.python }}-${{ hashFiles('requirements.txt') }}
      - name: Install core dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt --upgrade
      - name: Generate the project
        run: python -c "from cookiecutter.main import cookiecutter; cookiecutter('.', no_input=True)"
      - name: Install template dependencies
        run: |
          pip install -e "awesome_lib[test]" --upgrade
      - name: Run unittests
        run: |
          cd awesome_lib && coverage run -m pytest tests/
          cd awesome_lib && coverage xml
      - uses: actions/upload-artifact@v2
        with:
          name: coverage-main
          path: awesome_lib/coverage.xml

  codecov-upload:
    runs-on: ubuntu-latest
    needs: pytest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          flags: unittests
          fail_ci_if_error: true

  docs:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: [3.8]
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ matrix.python }}-${{ hashFiles('requirements.txt') }}
      - name: Install core dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt --upgrade
      - name: Generate the project
        run: python -c "from cookiecutter.main import cookiecutter; cookiecutter('.', no_input=True)"
      - name: Install template dependencies
        run: |
          pip install -e "awesome_lib[docs]" --upgrade
      - name: Build documentation
        run: cd awesome_lib/docs && make docs

      - name: Documentation sanity check
        run: test -e awesome_lib/docs/build/index.html || exit

  headers:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: [3.8]
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ matrix.python }}-${{ hashFiles('requirements.txt') }}
      - name: Install core dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt --upgrade
      - name: Generate the project
        run: python -c "from cookiecutter.main import cookiecutter; cookiecutter('.', no_input=True)"
      - name: Install template dependencies
        run: |
          pip install -e awesome_lib/. --upgrade
      - name: Run header verifications
        run: cd awesome_lib && python .github/validate_headers.py
